name: Build and Deploy to Amazon EKS

on:
  workflow_dispatch:
  push:
    branches: [ master ]

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  CLUSTER_NAME: soat-cluster
  ECR_REPOSITORY: soat-fiap-product-application-ms
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY || \
          aws ecr create-repository --repository-name $ECR_REPOSITORY

      - name: Login ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS \
          --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:latest .
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .

      - name: Tag and Push image to ECR
        run: |
          IMAGE_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY
          docker tag $ECR_REPOSITORY:latest $IMAGE_URI:latest
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $IMAGE_URI:$IMAGE_TAG
          docker push $IMAGE_URI:latest
          docker push $IMAGE_URI:$IMAGE_TAG

      - name: Update Kubeconfig
        run: |
          aws eks update-kubeconfig \
          --name $CLUSTER_NAME \
          --region $AWS_REGION

      - name: Create Kubernetes Secret with AWS credentials
        run: |
          kubectl create secret generic aws-credentials \
            --from-literal=DATABASE_USERNAME='${{ secrets.DATABASE_USERNAME }}' \
            --from-literal=DATABASE_PASSWORD='${{ secrets.DATABASE_PASSWORD }}' \
            --from-literal=DATABASE_HOST='${{ secrets.DATABASE_HOST }}' \
            --from-literal=DATABASE_NAME='${{ secrets.DATABASE_NAME }}' \
            --dry-run=client -o yaml | kubectl apply -f -


      - name: Apply Kubernetes manifests (Service, HPA, etc)
        run: |
          kubectl apply -f k8s/

      - name: Update deployment with new image
        run: |
          kubectl set image deployment/soat-fiap-product-application-ms soat-fiap-product-application-ms=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
          kubectl rollout status deployment/soat-fiap-product-application-ms --timeout=200s || kubectl get pods
          kubectl get svc soat-fiap-product-application-ms